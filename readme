Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?

John Matters

------------------------------------------------------------------------
Student 2: What is your name?

Daniel Wang

------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.

------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.

------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?

Yes

------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?

Yes

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

None

------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None

------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

None

------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

critTer nodeFT.c

nodeFT.c: line 390: low priority: 
A file should contain no more than 15 functions;
this file contains 16 functions

nodeFT.c: line 161: medium priority:
Do you want to validate 'pvContent' through an assert?

nodeFT.c: line 354: medium priority:
Do you want to validate 'pvContent' through an assert?

By design, a file node can have its content pointing towards NULL,
therefore, an assertion would be incorrect.

critTer ft.c

ft.c: line 227: low priority: 
A loop should consist of fewer than 35 lines;
this loop consists of 48 lines; consider refactoring

ft.c: line 569: low priority: 
A file should contain no more than 15 functions;
this file contains 18 functions

ft.c: line 172: medium priority:
Do you want to validate 'pvContent' through an assert?

ft.c: line 294: medium priority:
Do you want to validate 'pvContents' through an assert?

ft.c: line 397: medium priority:
Do you want to validate 'pvNewContents' through an assert?

ft.c: line 568: low priority: 
A source code file should contain fewer than 500 lines;
this file contains 569 lines

By design, a file node can have its content pointing towards NULL,
therefore, an assertion would be incorrect.

------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1        BDT_insert()
---------------------------------------------------------------
         ./bdtBad2        BDT_freeSubtree()
---------------------------------------------------------------
         ./bdtBad3        BDT_addChild()
---------------------------------------------------------------
         ./bdtBad4        BDT_strlenAccumulate()
---------------------------------------------------------------
         ./bdtBad5        BDT_findNode()
===============================================================

------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?

in insert in dtGood.c, every time a function call fails, the function
  must free all allocated memories up to the failure and return the 
  exit status. This could be accomplished by a helper method, which
  would improve the readability of the code.

in preOrderTraversal in dtGood.c, the function parameters are ambiguous.
  to improve the readability of the code, rename parameters with descriptive
  names like oNNode, oDArray, ulIndex.

Path_getComponent is not used outside of path, therefore it could be
  removed from the interface and made static in path.c, in order to make
  the module more concise.

------------------------------------------------------------------------